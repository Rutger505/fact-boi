name: Cleanup PR Environment

on:
  pull_request:
    types: [ closed ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_NAME: fact-boi

jobs:
  cleanup:
    name: Delete PR Environment
    runs-on: ubuntu-latest
    environment:
      name: pr-${{ github.event.pull_request.number }}

    steps:
      - name: Generate cleanup config
        id: config
        run: |
          ENVIRONMENT=pr-${{ github.event.pull_request.number }}
          NAMESPACE=${{ env.APP_NAME }}-$ENVIRONMENT
          RELEASE_NAME=${{ env.APP_NAME }}-$ENVIRONMENT
          
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "namespace=$NAMESPACE" >> $GITHUB_OUTPUT
          echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT

      - name: Safety check
        run: |
          NAMESPACE=${{ steps.config.outputs.namespace }}
          
          if [[ "$NAMESPACE" == *"production"* ]]; then
            echo "❌ Refusing to delete namespace containing 'production'"
            exit 1
          fi
          
          if [[ "$NAMESPACE" != ${{ env.APP_NAME }}-pr-* ]]; then
            echo "❌ Namespace doesn't match expected pattern for PR environments"
            exit 1
          fi

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.16.2'

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.31.0'

      - name: Set up Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Uninstall Helm release
        run: |
          NAMESPACE=${{ steps.config.outputs.namespace }}
          RELEASE_NAME=${{ steps.config.outputs.release_name }}
          
          echo "Uninstalling Helm release: $RELEASE_NAME from namespace: $NAMESPACE"
          
          # Delete helm release if it exists
          if helm status $RELEASE_NAME -n $NAMESPACE >/dev/null 2>&1; then
            helm uninstall $RELEASE_NAME -n $NAMESPACE --wait --timeout 5m
            echo "✅ Helm release $RELEASE_NAME uninstalled successfully"
          else
            echo "⚠️ Helm release $RELEASE_NAME not found"
          fi
          
          # Delete namespace after helm uninstall
          if kubectl get namespace "$NAMESPACE" 2>/dev/null; then
            kubectl delete namespace "$NAMESPACE" --timeout=5m
            echo "✅ Namespace $NAMESPACE deleted successfully"
          else
            echo "⚠️ Namespace $NAMESPACE not found"
          fi

      - name: Comment cleanup status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const environment = '${{ steps.config.outputs.environment }}';
            const status = '${{ job.status }}';
            const success = status === 'success';
            
            const statusLabel = success ? 'succeeded' : 'failed';
            const emoji = success ? '✅' : '❌';
            
            const message = environment
              ? `${emoji} Environment \`${environment}\` cleanup ${statusLabel}`
              : `${emoji} Pull request environment cleanup ${statusLabel}`;
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            for (const comment of comments) {
              if (comment.body.toLowerCase().includes('environment') && 
                  comment.body.includes('cleanup')) {
                await github.rest.issues.deleteComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                });
              }
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });